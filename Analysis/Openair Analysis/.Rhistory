polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'nwr')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf')
windRose(testdata, wd = 'wd', ws = 'ws')
testdata     = read.csv('2020-07-15--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
########## Polar Plot ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf')
testdata     = read.csv('2020-07-17--16.csv', header = FALSE)
########## Polar Plot ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
View(testdata)
########## Load Data ##########
library(openair)
testdata     = read.csv('2020-07-17--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
plot(testdata$co2, type = 'l', col = 'red')
########## Polar Plot ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 95)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 99)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(60,70))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50,70))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(40,50))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(40,60))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50,60))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50,70))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(55,65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(25,30))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(25,45))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(25,35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20,35))
plot(testdata$co2, type = 'l', col = 'red')
min(testdata$co2)
testdata$co2 = testdata$co2 - min
testdata$co2 = testdata$co2 - minimum
minimum = min(testdata$co2)
testdata$co2 = testdata$co2 - minimum
plot(testdata$co2, type = 'l', col = 'red')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20,35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20,35))
percentile = 90
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarAnnulus(testdata, pollutant = pollutant)
polarAnnulus(testdata, pollutant = pollutant,
period = 'trend')
View(testdata)
polarAnnulus(testdata, pollutant = pollutant,
period = 'hour')
testdata     = read.csv('2020-07-17--16.csv', header = FALSE)
########## Load Data ##########
library(openair)
testdata     = read.csv('2020-07-17--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
testdata = read.csv('example.csv', header = TRUE)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
########## Load Data ##########
library(openair)
testdata     = read.csv('2020-07-17--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
pollutant = 'co2'
View(testdata)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
windRose(testdata, wd = 'wd', ws = 'ws')
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
polarAnnulus(testdata, pollutant = pollutant,
period = 'hour')
plot(testdata$co2, type = 'l', col = 'red')
polarPlot(testdata, pollutant = pollutant, statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = 'co2', statistic = 'nwr')
polarPlot(testdata, pollutant = pollutant, statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
percentile = c(25, 35)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(25, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20, 40))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(20, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(15, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(75, 90))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(70, 80))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50, 65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(15, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50, 65))
testdata     = read.csv('2020-07-22--09.csv', header = FALSE)
View(testdata)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*2.25/2.237
testdata = read.csv('example.csv', header = TRUE)
########## Load Data ##########
library(openair)
testdata     = read.csv('2020-07-22--09.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*2.25/2.237
testdata     = read.csv('2020-07-22--09.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*2.25
plot(testdata$co2, type = 'l', col = 'red')
########## Normal Plot ##########
plot(testdata$ws, type = 'l', col = 'red')
plot(testdata$wd, type = 'l', col = 'red')
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
windRose(testdata, wd = 'wd', ws = 'ws')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50, 65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(15, 35))
windRose(testdata, wd = 'wd', ws = 'ws')
plot(testdata$wd, type = 'l', col = 'red')
plot(testdata$wd, type = 'o', col = 'red')
plot(testdata$wd, type = 'p', col = 'red')
########## Normal Plot ##########
plot(testdata$ws, type = 'l', col = 'red')
plot(testdata$co2, type = 'l', col = 'red')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50, 65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'cpf',
percentile = c(15, 35))
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'cpf',
percentile = c(50, 65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = c(50, 65))
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'cpf',
percentile = c(50, 65))
testdata     = read.csv('2020-07-15--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
View(testdata)
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
View(testdata)
########## Load Data ##########
library(openair)
testdata                = read.csv('2020-07-15--16.csv', header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata                = read.csv('2020-07-15--16.csv', header = FALSE)
testdata                = read.csv('2020-07-15--16.csv', header = FALSE)
View(testdata)
testdata                = read.csv('2020-07-15--16.csv', header = TRUE)
testdata                = read.csv('2020-07-15--16.csv', header = TRUE)
View(testdata)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*1.492/2.237
testdata$wd = testdata$wd*22.5
plot(testdata$co2, type = 'l', col = 'red')
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'mean')
pollutant = 'co2'
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
testdata                = read.csv('New.csv',
header = FALSE)
testdata                = read.csv('New.csv',
header = FALSE)
testdata                = read.csv('New.csv',
header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
View(testdata)
testdata$ws = testdata$ws/5*2.25
plot(testdata$co2, type = 'l', col = 'red')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'cpf',
percentile = 90)
testdata                = read.csv('New.csv',
header = FALSE)
testdata                = read.csv('New.csv',
header = FALSE)
testdata                = read.csv('New.csv',
header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
View(testdata)
View(testdata)
########## Load Data ##########
library(openair)
testdata                = read.csv('New.csv',
header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*2.25
pollutant = 'co2'
########## Normal Plot ##########
plot(testdata$ws, type = 'l', col = 'red')
plot(testdata$wd, type = 'p', col = 'red')
plot(testdata$co2, type = 'l', col = 'red')
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 80)
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 90)
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 99)
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 90)
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 90,
cols = 'darkorange')
windRose(testdata, wd = 'wd', ws = 'ws')
polarPlot(testdata, pollutant = pollutant,
uncertainty = FALSE,
statistic = 'mean')
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'mean')
polarAnnulus(testdata, pollutant = pollutant,
period = 'minute')
polarAnnulus(testdata, pollutant = pollutant,
period = 'hour')
polarAnnulus(testdata, pollutant = pollutant)
polarAnnulus(testdata, pollutant = pollutant,
period = 'hour')
polarPlot(testdata, pollutant =  'co2', colors =  'jet', k = 100,
statistic = 'nwr')
?polarPlot
testdata                = read.csv('2020-07-22--09.csv',
header = FALSE)
View(testdata)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
testdata$ws = testdata$ws/5*2.25
pollutant = 'co2'
plot(testdata$co2, type = 'l', col = 'red')
testdata$co2avg = filter(testdata$co2,rep(1/10, 10))
plot(testdata$co2avg, type = 'l', col = 'red')
plot(testdata$co2, type = 'l', col = 'red')
par(new=TRUE)
plot(testdata$co2avg, type = 'l', col = 'red')
plot(testdata$co2avg, type = 'l', col = 'blue')
par(new=TRUE)
plot(testdata$co2, type = 'l', col = 'red')
testdata$co2avg = filter(testdata$co2,rep(1/10, 10))
View(testdata)
testdata$co2avg = filter(testdata$co2,rep(1/100, 100))
plot(testdata$co2avg, type = 'l', col = 'blue')
plot(testdata$co2, type = 'l', col = 'red')
par(new=TRUE)
plot(testdata$co2avg, type = 'l', col = 'blue')
########## Load Data ##########
library(openair)
file = 'PostFallsTest.csv'
testdata                = read.csv(file,
header = FALSE)
testdata                = read.csv(file, header = FALSE)
file = 'PostFallsTest.csv'
file = '2020-07-22--09.csv'
testdata                = read.csv(file, header = FALSE)
View(testdata)
file = 'PostFallsTest.csv'
testdata                = read.csv(file, header = FALSE)
file = 'PostFallsTest.csv'
testdata                = read.csv(file, header = FALSE)
colnames(testdata)[1:4] = c('UnixTime', 'ws', 'wd', 'co2')
testdata$date           = ISOdatetime(1970,1,1,0,0,0) + testdata$UnixTime
testdata$UnixTime       = NULL
testdata                = testdata[c(4,1,2,3)]
View(testdata)
pollutant = 'co2'
testdata$ws = testdata$ws/5*2.25
########## Edit Data ##########
mean(testdata$co2)
########## Normal Plot ##########
plot(testdata$ws, type = 'l', col = 'red')
plot(testdata$wd, type = 'p', col = 'red')
plot(testdata$wd, type = 'p', col = 'red')
plot(testdata$co2, type = 'l', col = 'red')
########## Other Plots ##########
percentileRose(testdata, pollutant = pollutant,
method = 'cpf', percentile = 90,
cols = 'darkorange')
windRose(testdata, wd = 'wd', ws = 'ws')
polarPlot(testdata, pollutant = pollutant,
uncertainty = TRUE,
statistic = 'mean')
